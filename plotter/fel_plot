#!/usr/bin/env python3
import sys

if len(sys.argv) <= 2:
	exit(2)

import numpy as np
from matplotlib import pyplot as plt

z = np.genfromtxt( sys.argv[1], delimiter=',')[0,:]


for i in range(2, len(sys.argv)):
	# Plot a
	if sys.argv[i] == "-a":
		a = np.genfromtxt( sys.argv[1], delimiter=',')[1,:]
		plt.plot(z,a,'-b')
		plt.yscale('log')
		plt.xlabel("$z\u0305$", size='x-large')
		plt.ylabel("$\u0251$", size='x-large')
		plt.grid(which='both')
		plt.show()

	# Plot phi
	elif sys.argv[i] == "-phi":
		phi = np.genfromtxt( sys.argv[1], delimiter=',')[1,:]
		phi = np.genfromtxt( sys.argv[1], delimiter=',')[2,:]
		plt.plot(z,phi,'-b')
		plt.xlabel("$z\u0305$", size='x-large')
		plt.ylabel("$\u03C6$", size='x-large')
		plt.grid(which='both')
		plt.show()
	
	# Phot phase space
	elif sys.argv[i] == "-pha":
		ELE_NUM = int(sys.argv[i+2])
		z_point = int(sys.argv[i+1])
		theta = np.genfromtxt( sys.argv[1], delimiter=',')[ 2:(ELE_NUM+2), z_point ]
		p = np.genfromtxt( sys.argv[1], delimiter=',')[ (ELE_NUM+2):, z_point ]
		print( len(p) )
		print( len(theta) )
		exit(0)


		plt.plot( theta%(2*np.pi), p, '.b' );
		if np.abs( plt.axis[3]) <= 0.5 or np.abs( plt.axis[2] <= 0.5 ):
			plt.ylim( -0.5,0.5)
		plt.xlim(0, 2*np.pi )
		plt.xlabel("$\u03B8$", size='x-large')
		plt.ylabel("$p$", size='x-large')
		plt.grid(which='both')
		plt.show()


